Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 4996 (-4995) rows, 1000 (0) columns and 10990 (-9990) elements
Clp1000I sum of infeasibilities 1.24777e-05 - average 2.49754e-09, 652 fixed columns
Coin0506I Presolve 616 (-4380) rows, 347 (-653) columns and 1577 (-9413) elements
Clp0029I End of values pass after 347 iterations
Clp0014I Perturbing problem by 0.001% of 2.1865165 - largest nonzero change 3.1636948e-05 ( 0.0015029195%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2147.8947
Clp0000I Optimal - objective value 2147.8947
Coin0511I After Postsolve, objective 2147.8947, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2147.8947
Clp0000I Optimal - objective value 2147.8947
Clp0000I Optimal - objective value 2147.8947
Coin0511I After Postsolve, objective 2147.8947, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2147.894737 - 0 iterations time 0.232, Presolve 0.01, Idiot 0.22

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 170 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 169 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 154 strengthened rows, 0 substitutions
Cgl0004I processed model has 4674 rows, 1000 columns (1000 integer (1000 of which binary)) and 10517 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.210526
Cbc0038I Pass   1: (0.17 seconds) suminf.    0.21053 (1) obj. -2147.89 iterations 62
Cbc0038I Solution found of -2125
Cbc0038I Before mini branch and bound, 998 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4674 rows 1000 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I Round again with cutoff of -2128.19
Cbc0038I Reduced cost fixing fixed 448 variables on major pass 2
Cbc0038I Pass   2: (0.22 seconds) suminf.    0.21053 (1) obj. -2147.89 iterations 0
Cbc0038I Pass   3: (0.22 seconds) suminf.    0.04832 (1) obj. -2128.19 iterations 4
Cbc0038I Pass   4: (0.22 seconds) suminf.    0.26786 (1) obj. -2142.68 iterations 3
Cbc0038I Pass   5: (0.22 seconds) suminf.    0.39156 (2) obj. -2128.19 iterations 74
Cbc0038I Pass   6: (0.23 seconds) suminf.    0.39156 (2) obj. -2128.19 iterations 18
Cbc0038I Pass   7: (0.23 seconds) suminf.    0.09378 (1) obj. -2128.19 iterations 25
Cbc0038I Pass   8: (0.23 seconds) suminf.    0.14286 (1) obj. -2131.43 iterations 3
Cbc0038I Pass   9: (0.23 seconds) suminf.    0.36046 (2) obj. -2128.19 iterations 64
Cbc0038I Pass  10: (0.24 seconds) suminf.    0.08000 (1) obj. -2129.2 iterations 51
Cbc0038I Pass  11: (0.24 seconds) suminf.    0.46179 (2) obj. -2128.19 iterations 13
Cbc0038I Pass  12: (0.24 seconds) suminf.    0.08000 (1) obj. -2129.2 iterations 2
Cbc0038I Pass  13: (0.24 seconds) suminf.    1.13308 (3) obj. -2128.19 iterations 67
Cbc0038I Pass  14: (0.25 seconds) suminf.    0.77096 (3) obj. -2128.19 iterations 14
Cbc0038I Pass  15: (0.25 seconds) suminf.    0.79512 (2) obj. -2128.19 iterations 52
Cbc0038I Solution found of -2129
Cbc0038I Before mini branch and bound, 960 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4674 rows 1000 columns, reduced to 14 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -2129 to -2140 (0.30 seconds)
Cbc0038I Round again with cutoff of -2142.38
Cbc0038I Reduced cost fixing fixed 736 variables on major pass 3
Cbc0038I Pass  16: (0.30 seconds) suminf.    0.21053 (1) obj. -2147.89 iterations 0
Cbc0038I Pass  17: (0.31 seconds) suminf.    0.45734 (1) obj. -2142.38 iterations 4
Cbc0038I Pass  18: (0.31 seconds) suminf.    0.46429 (1) obj. -2145.36 iterations 3
Cbc0038I Pass  19: (0.31 seconds) suminf.    1.22644 (3) obj. -2142.38 iterations 75
Cbc0038I Pass  20: (0.31 seconds) suminf.    0.84583 (3) obj. -2142.38 iterations 10
Cbc0038I Pass  21: (0.32 seconds) suminf.    0.50000 (1) obj. -2145 iterations 49
Cbc0038I Pass  22: (0.32 seconds) suminf.    0.35208 (1) obj. -2142.38 iterations 4
Cbc0038I Pass  23: (0.32 seconds) suminf.    0.39286 (1) obj. -2143.93 iterations 3
Cbc0038I Pass  24: (0.32 seconds) suminf.    0.23789 (2) obj. -2142.38 iterations 80
Cbc0038I Pass  25: (0.33 seconds) suminf.    0.23789 (2) obj. -2142.38 iterations 26
Cbc0038I Pass  26: (0.33 seconds) suminf.    0.36364 (1) obj. -2143.64 iterations 40
Cbc0038I Pass  27: (0.33 seconds) suminf.    0.27313 (1) obj. -2142.38 iterations 4
Cbc0038I Pass  28: (0.33 seconds) suminf.    0.28571 (1) obj. -2142.86 iterations 3
Cbc0038I Pass  29: (0.33 seconds) suminf.    0.23789 (2) obj. -2142.38 iterations 69
Cbc0038I Pass  30: (0.34 seconds) suminf.    0.23789 (2) obj. -2142.38 iterations 25
Cbc0038I Pass  31: (0.34 seconds) suminf.    0.33333 (1) obj. -2143.33 iterations 33
Cbc0038I Pass  32: (0.34 seconds) suminf.    0.24681 (1) obj. -2142.38 iterations 4
Cbc0038I Pass  33: (0.34 seconds) suminf.    0.25000 (1) obj. -2142.5 iterations 3
Cbc0038I Pass  34: (0.35 seconds) suminf.    0.76211 (2) obj. -2142.38 iterations 67
Cbc0038I Pass  35: (0.35 seconds) suminf.    0.33333 (1) obj. -2143.33 iterations 59
Cbc0038I Pass  36: (0.35 seconds) suminf.    0.27313 (1) obj. -2142.38 iterations 4
Cbc0038I Pass  37: (0.35 seconds) suminf.    0.28571 (1) obj. -2142.86 iterations 3
Cbc0038I Pass  38: (0.36 seconds) suminf.    0.74450 (2) obj. -2142.38 iterations 76
Cbc0038I Pass  39: (0.36 seconds) suminf.    0.74450 (2) obj. -2142.38 iterations 15
Cbc0038I Pass  40: (0.36 seconds) suminf.    0.29944 (1) obj. -2142.38 iterations 50
Cbc0038I Pass  41: (0.36 seconds) suminf.    0.32143 (1) obj. -2143.21 iterations 3
Cbc0038I Pass  42: (0.36 seconds) suminf.    0.76211 (2) obj. -2142.38 iterations 56
Cbc0038I Pass  43: (0.37 seconds) suminf.    0.34783 (1) obj. -2143.48 iterations 48
Cbc0038I Pass  44: (0.37 seconds) suminf.    0.27313 (1) obj. -2142.38 iterations 4
Cbc0038I Pass  45: (0.37 seconds) suminf.    0.28571 (1) obj. -2142.86 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 969 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4674 rows 1000 columns, reduced to 10 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -2140 - took 0.24 seconds
Cbc0012I Integer solution of -2140 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 4674 rows 1000 columns, reduced to 4 rows 6 columns
Cbc0031I 1 added rows had average density of 999
Cbc0013I At root node, 1 cuts changed objective from -2147.8947 to -2147.8947 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 999.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2140 best solution, best possible -2147.8947 (0.50 seconds)
Cbc0038I Full problem 4674 rows 1000 columns, reduced to 4 rows 7 columns
Cbc0038I Full problem 4675 rows 1000 columns, reduced to 353 rows 266 columns
Cbc0044I Reduced cost fixing - 353 rows, 266 columns - restarting search
Cbc0012I Integer solution of -2005 found by Previous solution after 0 iterations and 0 nodes (0.69 seconds)
Cbc0012I Integer solution of -2062 found by DiveCoefficient after 0 iterations and 0 nodes (0.69 seconds)
Cbc0038I Full problem 353 rows 266 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -2132 found by RINS after 0 iterations and 0 nodes (0.70 seconds)
Cbc0012I Integer solution of -2140 found by DiveCoefficient after 48 iterations and 0 nodes (0.84 seconds)
Cbc0031I 3 added rows had average density of 265.33333
Cbc0013I At root node, 3 cuts changed objective from -2147.8947 to -2140 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 257.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements,Resolution status: OPTIMAL

Resolution time (sec) : 1.118

----------------------------------

Result; test_1000_1000_r0.01-0.dat; 1.118; OptimizationStatus.OPTIMAL; 2140.0

 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 6 row cuts average 92.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 7 (TwoMirCuts) - 8 row cuts average 236.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 264.1 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0001I Search completed - best objective -2140, took 48 iterations and 0 nodes (0.84 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cbc0038I Probing was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Gomory was tried 9 times and created 14 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I Knapsack was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I OddWheel was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I MixedIntegerRounding2 was tried 9 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I FlowCover was tried 9 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 9 times and created 8 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I ZeroHalf was tried 9 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.060 seconds)
Cbc0001I Search completed - best objective -2140, took 222 iterations and 50 nodes (0.85 seconds)
Cbc0032I Strong branching done 94 times (323 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 25, 1228 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.87

