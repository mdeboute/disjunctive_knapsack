Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 9991 (-9990) rows, 1000 (0) columns and 20980 (-19980) elements
Clp1000I sum of infeasibilities 5.81775e-06 - average 5.823e-10, 507 fixed columns
Coin0506I Presolve 2430 (-7561) rows, 493 (-507) columns and 5351 (-15629) elements
Clp0029I End of values pass after 493 iterations
Clp0014I Perturbing problem by 0.001% of 1.9273218 - largest nonzero change 2.9553252e-05 ( 0.0017907095%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 1954.5122
Clp0000I Optimal - objective value 1954.5122
Coin0511I After Postsolve, objective 1954.5122, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1954.5122
Clp0000I Optimal - objective value 1954.5122
Clp0000I Optimal - objective value 1954.5122
Coin0511I After Postsolve, objective 1954.5122, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1954.512195 - 0 iterations time 0.492, Presolve 0.01, Idiot 0.47

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1361 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1172 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 813 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 7996 rows, 1000 columns (1000 integer (1000 of which binary)) and 18339 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 0.549%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 144 integers unsatisfied sum - 71.7955
Cbc0038I Pass   1: (0.51 seconds) suminf.    0.00000 (0) obj. -1506 iterations 320
Cbc0038I Solution found of -1506
Cbc0038I Rounding solution of -1816 is better than previous of -1506

Cbc0038I Before mini branch and bound, 856 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7996 rows 1000 columns, reduced to 260 rows 144 columns
Cbc0038I Mini branch and bound improved solution from -1816 to -1890 (0.68 seconds)
Cbc0038I Round again with cutoff of -1895.7
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: (0.70 seconds) suminf.    0.92789 (3) obj. -1895.7 iterations 433
Cbc0038I Pass   3: (0.71 seconds) suminf.    0.92789 (3) obj. -1895.7 iterations 99
Cbc0038I Pass   4: (0.71 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 192
Cbc0038I Pass   5: (0.72 seconds) suminf.    0.22222 (1) obj. -1897.78 iterations 99
Cbc0038I Pass   6: (0.72 seconds) suminf.    0.22222 (1) obj. -1897.78 iterations 0
Cbc0038I Pass   7: (0.73 seconds) suminf.    0.43046 (2) obj. -1895.7 iterations 194
Cbc0038I Pass   8: (0.73 seconds) suminf.    0.37037 (1) obj. -1896.3 iterations 143
Cbc0038I Pass   9: (0.74 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 76
Cbc0038I Pass  10: (0.74 seconds) suminf.    0.14815 (1) obj. -1898.52 iterations 68
Cbc0038I Pass  11: (0.74 seconds) suminf.    0.14815 (1) obj. -1898.52 iterations 0
Cbc0038I Pass  12: (0.75 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 143
Cbc0038I Pass  13: (0.76 seconds) suminf.    0.23333 (1) obj. -1897.67 iterations 76
Cbc0038I Pass  14: (0.76 seconds) suminf.    0.23333 (1) obj. -1897.67 iterations 0
Cbc0038I Pass  15: (0.76 seconds) suminf.    0.43046 (2) obj. -1895.7 iterations 202
Cbc0038I Pass  16: (0.77 seconds) suminf.    0.40741 (1) obj. -1895.93 iterations 125
Cbc0038I Pass  17: (0.77 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 39
Cbc0038I Pass  18: (0.78 seconds) suminf.    0.38462 (1) obj. -1896.15 iterations 16
Cbc0038I Pass  19: (0.78 seconds) suminf.    0.38462 (1) obj. -1896.15 iterations 0
Cbc0038I Pass  20: (0.79 seconds) suminf.    0.43046 (2) obj. -1895.7 iterations 112
Cbc0038I Pass  21: (0.79 seconds) suminf.    0.30769 (1) obj. -1896.92 iterations 89
Cbc0038I Pass  22: (0.80 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 33
Cbc0038I Pass  23: (0.80 seconds) suminf.    0.30769 (1) obj. -1896.92 iterations 18
Cbc0038I Pass  24: (0.81 seconds) suminf.    1.32705 (6) obj. -1895.7 iterations 150
Cbc0038I Pass  25: (0.81 seconds) suminf.    0.33333 (1) obj. -1896.67 iterations 110
Cbc0038I Pass  26: (0.82 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 39
Cbc0038I Pass  27: (0.82 seconds) suminf.    0.23077 (1) obj. -1897.69 iterations 21
Cbc0038I Pass  28: (0.82 seconds) suminf.    0.23077 (1) obj. -1897.69 iterations 0
Cbc0038I Pass  29: (0.83 seconds) suminf.    1.29139 (6) obj. -1895.7 iterations 193
Cbc0038I Pass  30: (0.84 seconds) suminf.    0.33333 (1) obj. -1896.67 iterations 150
Cbc0038I Pass  31: (0.84 seconds) suminf.    0.56954 (2) obj. -1895.7 iterations 43
Cbc0038I Rounding solution of -1900 is better than previous of -1890

Cbc0038I Before mini branch and bound, 828 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7996 rows 1000 columns, reduced to 313 rows 172 columns
Cbc0038I Mini branch and bound did not improve solution (1.02 seconds)
Cbc0038I Round again with cutoff of -1908.39
Cbc0038I Reduced cost fixing fixed 119 variables on major pass 3
Cbc0038I Pass  31: (1.03 seconds) suminf.   16.94380 (128) obj. -1908.39 iterations 63
Cbc0038I Pass  32: (1.04 seconds) suminf.   12.44715 (135) obj. -1908.39 iterations 63
Cbc0038I Pass  33: (1.05 seconds) suminf.   12.44715 (135) obj. -1908.39 iterations 4
Cbc0038I Pass  34: (1.05 seconds) suminf.   14.58200 (124) obj. -1908.39 iterations 31
Cbc0038I Pass  35: (1.06 seconds) suminf.    9.75052 (126) obj. -1908.39 iterations 45
Cbc0038I Pass  36: (1.07 seconds) suminf.    9.63140 (127) obj. -1908.39 iterations 11
Cbc0038I Pass  37: (1.07 seconds) suminf.    9.71409 (122) obj. -1908.39 iterations 11
Cbc0038I Pass  38: (1.08 seconds) suminf.   27.03586 (95) obj. -1908.39 iterations 93
Cbc0038I Pass  39: (1.09 seconds) suminf.    7.51706 (130) obj. -1908.39 iterations 74
Cbc0038I Pass  40: (1.10 seconds) suminf.    7.34465 (131) obj. -1908.39 iterations 29
Cbc0038I Pass  41: (1.10 seconds) suminf.   19.49665 (129) obj. -1908.39 iterations 46
Cbc0038I Pass  42: (1.11 seconds) suminf.   18.96594 (128) obj. -1908.39 iterations 23
Cbc0038I Pass  43: (1.12 seconds) suminf.   18.96594 (128) obj. -1908.39 iterations 1
Cbc0038I Pass  44: (1.12 seconds) suminf.    7.78148 (131) obj. -1908.39 iterations 27
Cbc0038I Pass  45: (1.13 seconds) suminf.    7.34465 (131) obj. -1908.39 iterations 30
Cbc0038I Pass  46: (1.14 seconds) suminf.   13.10173 (119) obj. -1908.39 iterations 48
Cbc0038I Pass  47: (1.14 seconds) suminf.   12.61912 (131) obj. -1908.39 iterations 39
Cbc0038I Pass  48: (1.15 seconds) suminf.    9.57244 (131) obj. -1908.39 iterations 41
Cbc0038I Pass  49: (1.16 seconds) suminf.    8.11130 (136) obj. -1908.39 iterations 51
Cbc0038I Pass  50: (1.17 seconds) suminf.    5.25291 (12) obj. -1908.39 iterations 54
Cbc0038I Pass  51: (1.18 seconds) suminf.    0.78166 (10) obj. -1908.39 iterations 34
Cbc0038I Pass  52: (1.18 seconds) suminf.    0.47690 (134) obj. -1908.39 iterations 17
Cbc0038I Pass  53: (1.19 seconds) suminf.    9.45453 (124) obj. -1908.39 iterations 49
Cbc0038I Pass  54: (1.19 seconds) suminf.    9.10567 (133) obj. -1908.39 iterations 33
Cbc0038I Pass  55: (1.20 seconds) suminf.    5.37748 (138) obj. -1908.39 iterations 32
Cbc0038I Pass  56: (1.21 seconds) suminf.    6.57036 (131) obj. -1908.39 iterations 36
Cbc0038I Pass  57: (1.21 seconds) suminf.    6.53893 (132) obj. -1908.39 iterations 13
Cbc0038I Pass  58: (1.22 seconds) suminf.    7.10997 (133) obj. -1908.39 iterations 48
Cbc0038I Pass  59: (1.23 seconds) suminf.    6.82013 (134) obj. -1908.39 iterations 27
Cbc0038I Pass  60: (1.23 seconds) suminf.    1.43292 (5) obj. -1908.39 iterations 59
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 830 integers at bound fixed and 0 continuous
Cbc0038I Full problem 7996 rows 1000 columns, reduced to 323 rows 170 columns
Cbc0038I Mini branch and bound did not improve solution (1.42 seconds)
Cbc0038I After 1.42 seconds - Feasibility pump exiting with objective of -1900 - took 0.88 seconds
Cbc0012I Integer solution of -1900 found by feasibility pump after 0 iterations and 0 nodes (1.42 seconds)
Cbc0038I Full problem 7996 rows 1000 columns, reduced to 278 rows 154 columns
Cbc0031I 63 added rows had average density of 15.650794
Cbc0013I At root node, 63 cuts changed objective from -1937.9545 to -1917.2575 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 18 column cuts (18 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 20 row cuts average 119.4 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 144 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 76 row cuts average 97.3 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1900 best solution, best possible -1917.2575 (2.33 seconds)
Cbc0012I Integer solution of -1910 found by DiveCoefficient after 944 iterations and 3 nodes (2.95 seconds)
Cbc0010I After 5 nodes, 4 on tree, -1910 best solution, best possible -1917.2575 (3.11 seconds)
Cbc0010I After 37 nodes, 6 on tree, -1910 best solution, best possible -1917.2575 (3.85 seconds)
Cbc0038I Full problem 7996 rows 1000 columns, reduced to 90 rows 73 columns
Cbc0038I Full problem 8059 rows 1000 columns, reduced to 1488 rows 400 columns
Cbc0044I Reduced cost fixing - 1488 rows, 400 columns - restarting search
Cbc0012I Integer solution of -1910 found by Previous solution after 0 iterations and 0 nodes (4.23 seconds)
Cbc0038I Full problem 1488 rows 400 columns, reduced to 270 rows 152 columns
Cbc0031I 65 added rows had average density of 19.507692
Cbc0013I At root node, 65 cuts changed objective from -1937.9545 to -1916.4512 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 6 column cuts (6 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 90.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 108 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 30 row cuts average 119.2 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 10.6 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 83 row cuts average 14.7 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -1910 best solution, best possible -1916.4512 (5.83 seconds)
Cbc0038I Full problem 1488 rows 400 columns, reduced to 101 rows 78 columns
Cbc0010I After 55 nodes, 6 on tree, -1910 best solution, best possible -1916.4512 (6.84 seconds)
Cbc0038I Full problem 1488 rows 400 columns, reduced to 149 rows 102 columns
Cbc0010I After 178 nodes, 1 on tree, -1910 best solution, best possible -1915.6852 (8.10 seconds)
Cbc0010I After 244 nodes, 3 on tree, -1910 best solution, best possible -1913.5764 (9.13 seconds)
Cbc0001I Search completed - best objective -1910, took 8853 iterations and 260 nodes (9.30 seconds)
Cbc0032I Strong branching done 1594 times (30485 iterations), fathomed 32 nodes and fixed 18 variables
Cbc0035I Maximum depth 14, 1297 variables fixed on reduced cost
Cbc0038I Probing was tried 173 times and created 149 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
Cbc0038I Gomory was tried 173 times and created 25 cuts of which 0 were active after adding rounds of cuts (0.071 seconds)
Cbc0038I Knapsack was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I Clique was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I OddWheel was tried 173 times and created 332 cuts of whResolution status: OPTIMAL

Resolution time (sec) : 9.997

----------------------------------

Result; test_1000_1000_r0.02-0.dat; 9.997; OptimizationStatus.OPTIMAL; 1910.0

ich 0 were active after adding rounds of cuts (0.179 seconds)
Cbc0038I MixedIntegerRounding2 was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I FlowCover was tried 10 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 173 times and created 36 cuts of which 0 were active after adding rounds of cuts (0.357 seconds)
Cbc0038I ZeroHalf was tried 10 times and created 13 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)
Cbc0038I Stored from first was tried 173 times and created 114 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -1910, took 13415 iterations and 310 nodes (9.30 seconds)
Cbc0032I Strong branching done 292 times (10317 iterations), fathomed 14 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 1603 variables fixed on reduced cost
Total time (CPU seconds):       8.95   (Wallclock seconds):       9.48

