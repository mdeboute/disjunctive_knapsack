Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 2498 (-2497) rows, 1000 (0) columns and 5994 (-4994) elements
Clp1000I sum of infeasibilities 4.97926e-06 - average 1.9933e-09, 448 fixed columns
Coin0506I Presolve 783 (-1715) rows, 549 (-451) columns and 2113 (-3881) elements
Clp0029I End of values pass after 549 iterations
Clp0014I Perturbing problem by 0.001% of 2.5801369 - largest nonzero change 3.4134816e-05 ( 0.0015708815%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 3604.8276
Clp0000I Optimal - objective value 3604.8276
Coin0511I After Postsolve, objective 3604.8276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.0458113 - largest nonzero change 4.0216289e-05 ( 0.0015385131%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 3614.4828
Clp0000I Optimal - objective value 3614.4828
Clp0000I Optimal - objective value 3614.4828
Coin0511I After Postsolve, objective 3614.4828, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3614.482759 - 0 iterations time 0.192, Presolve 0.00, Idiot 0.19

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 59 strengthened rows, 0 substitutions
Cgl0004I processed model has 2459 rows, 1000 columns (1000 integer (1000 of which binary)) and 5936 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 0.175%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.448276
Cbc0038I Solution found of -3597
Cbc0038I Before mini branch and bound, 999 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2459 rows 1000 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -3599.65
Cbc0038I Reduced cost fixing fixed 289 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.03229 (1) obj. -3599.65 iterations 97
Cbc0038I Pass   2: suminf.    0.18056 (1) obj. -3611.81 iterations 1
Cbc0038I Pass   3: suminf.    0.53315 (2) obj. -3599.65 iterations 87
Cbc0038I Pass   4: suminf.    0.02010 (1) obj. -3599.65 iterations 63
Cbc0038I Pass   5: suminf.    0.02778 (1) obj. -3600.28 iterations 1
Cbc0038I Pass   6: suminf.    0.83582 (2) obj. -3599.65 iterations 85
Cbc0038I Pass   7: suminf.    0.83582 (2) obj. -3599.65 iterations 18
Cbc0038I Pass   8: suminf.    0.07060 (1) obj. -3599.65 iterations 50
Cbc0038I Pass   9: suminf.    0.08571 (1) obj. -3600.86 iterations 2
Cbc0038I Pass  10: suminf.    0.06699 (3) obj. -3599.65 iterations 87
Cbc0038I Pass  11: suminf.    0.03333 (1) obj. -3599.67 iterations 79
Cbc0038I Pass  12: suminf.    0.54531 (2) obj. -3599.65 iterations 24
Cbc0038I Solution found of -3600
Cbc0038I Before mini branch and bound, 961 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2459 rows 1000 columns, reduced to 13 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -3600 to -3610 (0.16 seconds)
Cbc0038I Round again with cutoff of -3611.7
Cbc0038I Reduced cost fixing fixed 696 variables on major pass 3
Cbc0038I Pass  13: suminf.    0.31269 (1) obj. -3611.7 iterations 1
Cbc0038I Pass  14: suminf.    0.35135 (1) obj. -3613.51 iterations 1
Cbc0038I Pass  15: suminf.    0.73746 (3) obj. -3611.7 iterations 97
Cbc0038I Pass  16: suminf.    0.16965 (2) obj. -3611.7 iterations 80
Cbc0038I Pass  17: suminf.    0.25000 (1) obj. -3612.5 iterations 2
Cbc0038I Pass  18: suminf.    0.18503 (1) obj. -3611.7 iterations 2
Cbc0038I Pass  19: suminf.    0.18919 (1) obj. -3611.89 iterations 1
Cbc0038I Pass  20: suminf.    0.61715 (5) obj. -3611.7 iterations 73
Cbc0038I Pass  21: suminf.    0.16965 (2) obj. -3611.7 iterations 120
Cbc0038I Pass  22: suminf.    0.18182 (1) obj. -3611.82 iterations 2
Cbc0038I Pass  23: suminf.    0.46602 (2) obj. -3611.7 iterations 86
Cbc0038I Pass  24: suminf.    0.16965 (2) obj. -3611.7 iterations 86
Cbc0038I Pass  25: suminf.    0.18182 (1) obj. -3611.82 iterations 2
Cbc0038I Pass  26: suminf.    0.62494 (2) obj. -3611.7 iterations 85
Cbc0038I Pass  27: suminf.    0.39816 (2) obj. -3611.7 iterations 31
Cbc0038I Pass  28: suminf.    0.16965 (2) obj. -3611.7 iterations 126
Cbc0038I Pass  29: suminf.    0.18182 (1) obj. -3611.82 iterations 2
Cbc0038I Pass  30: suminf.    0.36008 (3) obj. -3611.7 iterations 109
Cbc0038I Pass  31: suminf.    0.16965 (2) obj. -3611.7 iterations 115
Cbc0038I Pass  32: suminf.    0.18182 (1) obj. -3611.82 iterations 1
Cbc0038I Pass  33: suminf.    1.70976 (5) obj. -3611.7 iterations 89
Cbc0038I Pass  34: suminf.    0.20631 (1) obj. -3611.7 iterations 80
Cbc0038I Pass  35: suminf.    0.21622 (1) obj. -3612.16 iterations 1
Cbc0038I Pass  36: suminf.    0.83035 (2) obj. -3611.7 iterations 89
Cbc0038I Pass  37: suminf.    0.22581 (1) obj. -3612.26 iterations 82
Cbc0038I Pass  38: suminf.    0.18503 (1) obj. -3611.7 iterations 2
Cbc0038I Pass  39: suminf.    0.18919 (1) obj. -3611.89 iterations 1
Cbc0038I Pass  40: suminf.    0.50632 (5) obj. -3611.7 iterations 85
Cbc0038I Pass  41: suminf.    0.16965 (2) obj. -3611.7 iterations 97
Cbc0038I Pass  42: suminf.    0.24138 (1) obj. -3612.41 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 959 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2459 rows 1000 columns, reduced to 15 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -3610 - took 0.17 seconds
Cbc0012I Integer solution of -3610 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 2459 rows 1000 columns, reduced to 2 rows 5 columns
Cbc0031I 1 added rows had average density of 999
Cbc0013I At root node, 1 cuts changed objective from -3614.4828 to -3614.4186 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 999.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0038I Full problem 2459 rows 1000 columns, reduced to 3 rows 7 columns
Cbc0038I Full problem 2460 rows 1000 columns, reduced to 176 rows 212 columns
Cbc0044I Reduced cost fixing - 176 rows, 212 columns - restarting search
Cbc0012I Integer solution of -3265 found by Previous solution after 0 iterations and 0 nodes (0.46 seconds)
Cbc0012I Integer solution of -3551 found by DiveCoefficient after 0 iterations and 0 nodes (0.46 seconds)
Cbc0038I Full problem 176 rows 212 columns, reduced to 5 rows 5 columns
Cbc0012I Integer solution of -3609 found by RINS after 0 iterations and 0 nodes (0.47 seconds)
Cbc0012I Integer solution of -3610 found by DiveCoefficient after 17 iterations and 0 nodes (0.54 seconds)
Cbc0031I 3 added rows had average density of 207
Cbc0013I At root node, 3 cuts changed objective from -3614.4828 to -3610 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 5 column cuts (5 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 207.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 207.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 211.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 1 row cuts average 211.0 elements, 0 column cuts (0 active)
Cbc0001I Search completed - best objective -3610, took 17 iterations and 0 nodes (0.54 seconds)
Cbc0035I Maximum depth 0, 0 variabResolution status: OPTIMAL

Resolution time (sec) : 0.785

----------------------------------

Result; test_1000_2000_r0.005-0.dat; 0.785; OptimizationStatus.OPTIMAL; 3610.0

les fixed on reduced cost
Cbc0038I Probing was tried 4 times and created 5 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I Gomory was tried 4 times and created 4 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I OddWheel was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0038I TwoMirCuts was tried 4 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I ZeroHalf was tried 4 times and created 6 cuts of which 0 were active after adding rounds of cuts (0.030 seconds)
Cbc0038I Stored from first was tried 4 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -3610, took 181 iterations and 50 nodes (0.54 seconds)
Cbc0032I Strong branching done 220 times (667 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 23, 1098 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.56

