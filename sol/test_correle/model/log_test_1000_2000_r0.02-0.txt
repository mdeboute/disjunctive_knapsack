Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 9991 (-9990) rows, 1000 (0) columns and 20980 (-19980) elements
Clp1000I sum of infeasibilities 4.87845e-06 - average 4.88284e-10, 535 fixed columns
Coin0506I Presolve 2153 (-7838) rows, 465 (-535) columns and 4769 (-16211) elements
Clp0029I End of values pass after 465 iterations
Clp0014I Perturbing problem by 0.001% of 1.8615959 - largest nonzero change 2.9867712e-05 ( 0.0020592613%) - largest zero change 2.8168905e-05
Clp0000I Optimal - objective value 3372
Clp0000I Optimal - objective value 3372
Coin0511I After Postsolve, objective 3372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3372
Clp0000I Optimal - objective value 3372
Clp0000I Optimal - objective value 3372
Coin0511I After Postsolve, objective 3372, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3372 - 0 iterations time 0.562, Presolve 0.01, Idiot 0.54

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1337 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1189 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 811 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 8002 rows, 1000 columns (1000 integer (1000 of which binary)) and 18345 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 0.549%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 249 integers unsatisfied sum - 124.422
Cbc0038I Pass   1: (0.62 seconds) suminf.    0.00000 (0) obj. -1850 iterations 483
Cbc0038I Solution found of -1850
Cbc0038I Rounding solution of -2912 is better than previous of -1850

Cbc0038I Before mini branch and bound, 751 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 599 rows 249 columns
Cbc0038I Mini branch and bound improved solution from -2912 to -3130 (0.98 seconds)
Cbc0038I Round again with cutoff of -3153.32
Cbc0038I Pass   2: (1.00 seconds) suminf.    1.39399 (5) obj. -3153.32 iterations 355
Cbc0038I Pass   3: (1.01 seconds) suminf.    0.33218 (2) obj. -3153.32 iterations 360
Cbc0038I Pass   4: (1.02 seconds) suminf.    0.47170 (1) obj. -3155.28 iterations 183
Cbc0038I Pass   5: (1.02 seconds) suminf.    0.47170 (1) obj. -3155.28 iterations 0
Cbc0038I Pass   6: (1.03 seconds) suminf.    0.33218 (2) obj. -3153.32 iterations 48
Cbc0038I Pass   7: (1.03 seconds) suminf.    0.35443 (1) obj. -3153.54 iterations 12
Cbc0038I Pass   8: (1.05 seconds) suminf.    1.37094 (4) obj. -3153.32 iterations 428
Cbc0038I Pass   9: (1.06 seconds) suminf.    0.33218 (2) obj. -3153.32 iterations 262
Cbc0038I Pass  10: (1.06 seconds) suminf.    0.33871 (1) obj. -3156.61 iterations 7
Cbc0038I Pass  11: (1.06 seconds) suminf.    0.33871 (1) obj. -3156.61 iterations 0
Cbc0038I Pass  12: (1.07 seconds) suminf.    0.41422 (1) obj. -3153.32 iterations 8
Cbc0038I Pass  13: (1.07 seconds) suminf.    0.42268 (1) obj. -3154.23 iterations 7
Cbc0038I Pass  14: (1.09 seconds) suminf.    0.66782 (2) obj. -3153.32 iterations 488
Cbc0038I Pass  15: (1.10 seconds) suminf.    0.48387 (1) obj. -3155.16 iterations 201
Cbc0038I Pass  16: (1.11 seconds) suminf.    0.33218 (2) obj. -3153.32 iterations 26
Cbc0038I Pass  17: (1.11 seconds) suminf.    0.37209 (1) obj. -3153.72 iterations 10
Cbc0038I Pass  18: (1.12 seconds) suminf.    3.27739 (8) obj. -3153.32 iterations 294
Cbc0038I Pass  19: (1.13 seconds) suminf.    0.25806 (1) obj. -3162.58 iterations 180
Cbc0038I Pass  20: (1.13 seconds) suminf.    0.08712 (1) obj. -3153.32 iterations 8
Cbc0038I Pass  21: (1.14 seconds) suminf.    0.16495 (1) obj. -3161.65 iterations 7
Cbc0038I Pass  22: (1.15 seconds) suminf.    2.58050 (8) obj. -3153.32 iterations 245
Cbc0038I Pass  23: (1.15 seconds) suminf.    0.47170 (1) obj. -3155.28 iterations 174
Cbc0038I Pass  24: (1.16 seconds) suminf.    0.33218 (2) obj. -3153.32 iterations 26
Cbc0038I Pass  25: (1.16 seconds) suminf.    0.35443 (1) obj. -3153.54 iterations 7
Cbc0038I Pass  26: (1.17 seconds) suminf.    0.51304 (2) obj. -3153.32 iterations 273
Cbc0038I Pass  27: (1.18 seconds) suminf.    0.33218 (2) obj. -3153.32 iterations 202
Cbc0038I Pass  28: (1.18 seconds) suminf.    0.41071 (1) obj. -3155.89 iterations 8
Cbc0038I Pass  29: (1.19 seconds) suminf.    0.41071 (1) obj. -3155.89 iterations 0
Cbc0038I Pass  30: (1.19 seconds) suminf.    0.33946 (1) obj. -3153.32 iterations 8
Cbc0038I Pass  31: (1.19 seconds) suminf.    0.34021 (1) obj. -3153.4 iterations 7
Cbc0038I Rounding solution of -3159 is better than previous of -3130

Cbc0038I Before mini branch and bound, 692 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 832 rows 308 columns
Cbc0038I Mini branch and bound improved solution from -3159 to -3260 (1.63 seconds)
Cbc0038I Round again with cutoff of -3279.64
Cbc0038I Pass  31: (1.67 seconds) suminf.   79.51008 (161) obj. -3279.64 iterations 270
Cbc0038I Pass  32: (1.69 seconds) suminf.   63.16120 (152) obj. -3279.64 iterations 201
Cbc0038I Pass  33: (1.74 seconds) suminf.   16.50874 (303) obj. -3279.64 iterations 356
Cbc0038I Pass  34: (1.75 seconds) suminf.   16.41217 (300) obj. -3279.64 iterations 45
Cbc0038I Pass  35: (1.78 seconds) suminf.   17.06622 (294) obj. -3279.64 iterations 127
Cbc0038I Pass  36: (1.79 seconds) suminf.   17.06671 (295) obj. -3279.64 iterations 66
Cbc0038I Pass  37: (1.81 seconds) suminf.   14.36022 (291) obj. -3279.64 iterations 111
Cbc0038I Pass  38: (1.82 seconds) suminf.   14.36022 (291) obj. -3279.64 iterations 35
Cbc0038I Pass  39: (1.83 seconds) suminf.   15.65425 (286) obj. -3279.64 iterations 50
Cbc0038I Pass  40: (1.86 seconds) suminf.   33.90613 (151) obj. -3279.64 iterations 190
Cbc0038I Pass  41: (1.88 seconds) suminf.    8.15728 (281) obj. -3279.64 iterations 157
Cbc0038I Pass  42: (1.91 seconds) suminf.    7.82510 (289) obj. -3279.64 iterations 174
Cbc0038I Pass  43: (1.94 seconds) suminf.    7.42091 (291) obj. -3279.64 iterations 164
Cbc0038I Pass  44: (1.95 seconds) suminf.    7.33167 (290) obj. -3279.64 iterations 35
Cbc0038I Pass  45: (1.97 seconds) suminf.    7.14890 (282) obj. -3279.64 iterations 76
Cbc0038I Pass  46: (1.99 seconds) suminf.    6.61525 (311) obj. -3279.64 iterations 109
Cbc0038I Pass  47: (2.01 seconds) suminf.    6.62309 (305) obj. -3279.64 iterations 44
Cbc0038I Pass  48: (2.05 seconds) suminf.   17.82063 (277) obj. -3279.64 iterations 247
Cbc0038I Pass  49: (2.08 seconds) suminf.    3.91823 (300) obj. -3279.64 iterations 179
Cbc0038I Pass  50: (2.09 seconds) suminf.    3.78080 (290) obj. -3279.64 iterations 36
Cbc0038I Pass  51: (2.11 seconds) suminf.    3.11768 (317) obj. -3279.64 iterations 124
Cbc0038I Pass  52: (2.12 seconds) suminf.    3.11116 (335) obj. -3279.64 iterations 76
Cbc0038I Pass  53: (2.15 seconds) suminf.    4.61007 (271) obj. -3279.64 iterations 137
Cbc0038I Pass  54: (2.16 seconds) suminf.    4.59257 (271) obj. -3279.64 iterations 29
Cbc0038I Pass  55: (2.21 seconds) suminf.    5.36387 (320) obj. -3279.64 iterations 345
Cbc0038I Pass  56: (2.23 seconds) suminf.    5.35558 (341) obj. -3279.64 iterations 81
Cbc0038I Pass  57: (2.26 seconds) suminf.    6.79261 (274) obj. -3279.64 iterations 156
Cbc0038I Pass  58: (2.27 seconds) suminf.    6.76584 (272) obj. -3279.64 iterations 38
Cbc0038I Pass  59: (2.29 seconds) suminf.    6.36215 (313) obj. -3279.64 iterations 136
Cbc0038I Pass  60: (2.30 seconds) suminf.    6.36111 (316) obj. -3279.64 iterations 57
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 629 integers at bound fixed and 0 continuous
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 1282 rows 371 columns
Cbc0038I Mini branch and bound did not improve solution (2.90 seconds)
Cbc0038I After 2.90 seconds - Feasibility pump exiting with objective of -3260 - took 2.23 seconds
Cbc0012I Integer solution of -3260 found by feasibility pump after 0 iterations and 0 nodes (2.90 seconds)
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 638 rows 263 columns
Cbc0031I 123 added rows had average density of 33.666667
Cbc0013I At root node, 123 cuts changed objective from -3354.2187 to -3307.6724 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 449 row cuts average 360.9 elements, 0 column cuts (0 active)  in 0.407 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 293 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut geneResolution status: TIMED OUT and CALCULATED FEASIBLE SOLUTION

Resolution time (sec) : 30.772

----------------------------------

Result; test_1000_2000_r0.02-0.dat; 30.772; OptimizationStatus.FEASIBLE; 3270.0

rator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 186 row cuts average 180.4 elements, 0 column cuts (0 active)  in 0.330 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 11.8 elements, 0 column cuts (0 active)  in 1.276 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3260 best solution, best possible -3307.6724 (7.45 seconds)
Cbc0010I After 1 nodes, 2 on tree, -3260 best solution, best possible -3307.6724 (9.05 seconds)
Cbc0010I After 2 nodes, 3 on tree, -3260 best solution, best possible -3307.6724 (10.24 seconds)
Cbc0010I After 3 nodes, 4 on tree, -3260 best solution, best possible -3307.6724 (11.25 seconds)
Cbc0010I After 4 nodes, 5 on tree, -3260 best solution, best possible -3307.6724 (12.24 seconds)
Cbc0010I After 5 nodes, 6 on tree, -3260 best solution, best possible -3307.6724 (13.01 seconds)
Cbc0010I After 6 nodes, 7 on tree, -3260 best solution, best possible -3307.6724 (14.06 seconds)
Cbc0010I After 11 nodes, 11 on tree, -3260 best solution, best possible -3307.6724 (14.81 seconds)
Cbc0010I After 14 nodes, 12 on tree, -3260 best solution, best possible -3307.6724 (15.63 seconds)
Cbc0010I After 20 nodes, 15 on tree, -3260 best solution, best possible -3307.6724 (16.37 seconds)
Cbc0010I After 26 nodes, 17 on tree, -3260 best solution, best possible -3307.6724 (17.09 seconds)
Cbc0010I After 29 nodes, 19 on tree, -3260 best solution, best possible -3307.6724 (17.85 seconds)
Cbc0010I After 31 nodes, 20 on tree, -3260 best solution, best possible -3307.6724 (18.61 seconds)
Cbc0010I After 40 nodes, 24 on tree, -3260 best solution, best possible -3307.6724 (19.38 seconds)
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 572 rows 248 columns
Cbc0010I After 42 nodes, 26 on tree, -3260 best solution, best possible -3307.6724 (20.12 seconds)
Cbc0010I After 52 nodes, 30 on tree, -3260 best solution, best possible -3307.6724 (20.83 seconds)
Cbc0010I After 55 nodes, 32 on tree, -3260 best solution, best possible -3307.6724 (21.67 seconds)
Cbc0010I After 60 nodes, 35 on tree, -3260 best solution, best possible -3307.6724 (22.38 seconds)
Cbc0010I After 81 nodes, 47 on tree, -3260 best solution, best possible -3307.6724 (23.08 seconds)
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 131 rows 99 columns
Cbc0012I Integer solution of -3270 found by RINS after 18615 iterations and 91 nodes (23.60 seconds)
Cbc0010I After 97 nodes, 40 on tree, -3270 best solution, best possible -3307.6724 (23.78 seconds)
Cbc0010I After 123 nodes, 53 on tree, -3270 best solution, best possible -3307.6724 (24.55 seconds)
Cbc0010I After 139 nodes, 61 on tree, -3270 best solution, best possible -3307.6724 (25.27 seconds)
Cbc0010I After 169 nodes, 76 on tree, -3270 best solution, best possible -3307.6724 (26.02 seconds)
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 15 rows 21 columns
Cbc0010I After 218 nodes, 97 on tree, -3270 best solution, best possible -3307.6724 (26.78 seconds)
Cbc0010I After 252 nodes, 111 on tree, -3270 best solution, best possible -3307.6724 (27.48 seconds)
Cbc0010I After 274 nodes, 116 on tree, -3270 best solution, best possible -3307.6724 (28.58 seconds)
Cbc0038I Full problem 8002 rows 1000 columns, reduced to 21 rows 29 columns
Cbc0010I After 307 nodes, 127 on tree, -3270 best solution, best possible -3307.6724 (29.38 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective -3270 (best possible -3307.6724), took 39508 iterations and 345 nodes (30.00 seconds)
Cbc0032I Strong branching done 1780 times (38665 iterations), fathomed 3 nodes and fixed 26 variables
Cbc0035I Maximum depth 41, 4419 variables fixed on reduced cost
Total time (CPU seconds):       29.35   (Wallclock seconds):       30.16

