Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 6238 (-6237) rows, 500 (0) columns and 12974 (-12474) elements
Clp1000I sum of infeasibilities 2.8914e-06 - average 4.63514e-10, 244 fixed columns
Coin0506I Presolve 1677 (-4561) rows, 256 (-244) columns and 3608 (-9366) elements
Clp0029I End of values pass after 256 iterations
Clp0014I Perturbing problem by 0.001% of 2.0226594 - largest nonzero change 3.0183136e-05 ( 0.0018544508%) - largest zero change 2.6894305e-05
Clp0000I Optimal - objective value 1707.7586
Clp0000I Optimal - objective value 1707.7586
Coin0511I After Postsolve, objective 1707.7586, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1707.7586
Clp0000I Optimal - objective value 1707.7586
Clp0000I Optimal - objective value 1707.7586
Coin0511I After Postsolve, objective 1707.7586, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1707.758621 - 0 iterations time 0.352, Presolve 0.01, Idiot 0.34

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2303 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1609 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 550 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 32 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 4176 rows, 500 columns (500 integer (500 of which binary)) and 11218 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 1.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 132 integers unsatisfied sum - 65.7778
Cbc0038I Pass   1: (0.65 seconds) suminf.    0.00000 (0) obj. -964 iterations 356
Cbc0038I Solution found of -964
Cbc0038I Rounding solution of -1474 is better than previous of -964

Cbc0038I Before mini branch and bound, 368 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4176 rows 500 columns, reduced to 386 rows 132 columns
Cbc0038I Mini branch and bound did not improve solution (0.95 seconds)
Cbc0038I Round again with cutoff of -1494.28
Cbc0038I Pass   2: (0.96 seconds) suminf.    3.78310 (9) obj. -1494.28 iterations 182
Cbc0038I Pass   3: (0.96 seconds) suminf.    0.09928 (1) obj. -1494.28 iterations 165
Cbc0038I Pass   4: (0.96 seconds) suminf.    0.05102 (1) obj. -1499.49 iterations 6
Cbc0038I Pass   5: (0.97 seconds) suminf.    0.42777 (2) obj. -1494.28 iterations 114
Cbc0038I Pass   6: (0.97 seconds) suminf.    0.42777 (2) obj. -1494.28 iterations 119
Cbc0038I Pass   7: (0.97 seconds) suminf.    0.12676 (1) obj. -1501.27 iterations 54
Cbc0038I Pass   8: (0.98 seconds) suminf.    0.03035 (1) obj. -1494.28 iterations 12
Cbc0038I Pass   9: (0.98 seconds) suminf.    0.09184 (1) obj. -1500.92 iterations 5
Cbc0038I Pass  10: (0.99 seconds) suminf.    8.60481 (125) obj. -1494.28 iterations 263
Cbc0038I Pass  11: (1.10 seconds) suminf.    0.57223 (2) obj. -1494.28 iterations 1069
Cbc0038I Pass  12: (1.11 seconds) suminf.    0.50000 (1) obj. -1495 iterations 49
Cbc0038I Pass  13: (1.11 seconds) suminf.    0.49331 (1) obj. -1494.28 iterations 3
Cbc0038I Pass  14: (1.11 seconds) suminf.    1.01870 (3) obj. -1494.28 iterations 172
Cbc0038I Pass  15: (1.12 seconds) suminf.    0.42777 (2) obj. -1494.28 iterations 277
Cbc0038I Pass  16: (1.12 seconds) suminf.    0.12500 (1) obj. -1498.75 iterations 85
Cbc0038I Pass  17: (1.12 seconds) suminf.    0.12500 (1) obj. -1498.75 iterations 0
Cbc0038I Pass  18: (1.13 seconds) suminf.    0.27658 (1) obj. -1494.28 iterations 58
Cbc0038I Pass  19: (1.13 seconds) suminf.    0.24096 (1) obj. -1497.59 iterations 57
Cbc0038I Pass  20: (1.14 seconds) suminf.    0.44817 (2) obj. -1494.28 iterations 179
Cbc0038I Pass  21: (1.14 seconds) suminf.    0.44817 (2) obj. -1494.28 iterations 63
Cbc0038I Pass  22: (1.14 seconds) suminf.    0.41566 (1) obj. -1494.28 iterations 30
Cbc0038I Pass  23: (1.14 seconds) suminf.    0.40000 (1) obj. -1496 iterations 1
Cbc0038I Pass  24: (1.15 seconds) suminf.    0.42777 (2) obj. -1494.28 iterations 105
Cbc0038I Pass  25: (1.15 seconds) suminf.    0.42777 (2) obj. -1494.28 iterations 74
Cbc0038I Pass  26: (1.15 seconds) suminf.    0.10714 (1) obj. -1498.93 iterations 10
Cbc0038I Pass  27: (1.15 seconds) suminf.    0.10714 (1) obj. -1498.93 iterations 0
Cbc0038I Pass  28: (1.16 seconds) suminf.    0.49343 (1) obj. -1494.28 iterations 2
Cbc0038I Pass  29: (1.16 seconds) suminf.    0.50000 (1) obj. -1495 iterations 1
Cbc0038I Pass  30: (1.16 seconds) suminf.    0.57223 (2) obj. -1494.28 iterations 132
Cbc0038I Pass  31: (1.16 seconds) suminf.    0.39706 (1) obj. -1496.03 iterations 63
Cbc0038I Rounding solution of -1503 is better than previous of -1474

Cbc0038I Before mini branch and bound, 276 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4176 rows 500 columns, reduced to 1114 rows 224 columns - 9 fixed gives 551, 154 - ok now
Cbc0038I Full problem 4176 rows 500 columns, reduced to 551 rows 154 columns
Cbc0038I Mini branch and bound improved solution from -1503 to -1579 (1.52 seconds)
Cbc0038I Round again with cutoff of -1597.56
Cbc0038I Pass  31: (1.54 seconds) suminf.   32.14387 (105) obj. -1597.56 iterations 278
Cbc0038I Pass  32: (1.58 seconds) suminf.   15.86470 (173) obj. -1597.56 iterations 358
Cbc0038I Pass  33: (1.59 seconds) suminf.   15.08944 (201) obj. -1597.56 iterations 53
Cbc0038I Pass  34: (1.62 seconds) suminf.   10.40903 (146) obj. -1597.56 iterations 210
Cbc0038I Pass  35: (1.63 seconds) suminf.    9.29735 (138) obj. -1597.56 iterations 57
Cbc0038I Pass  36: (1.63 seconds) suminf.    9.19918 (137) obj. -1597.56 iterations 10
Cbc0038I Pass  37: (1.64 seconds) suminf.    8.74542 (156) obj. -1597.56 iterations 90
Cbc0038I Pass  38: (1.66 seconds) suminf.    8.48628 (185) obj. -1597.56 iterations 94
Cbc0038I Pass  39: (1.66 seconds) suminf.    8.90543 (183) obj. -1597.56 iterations 64
Cbc0038I Pass  40: (1.67 seconds) suminf.    8.78779 (174) obj. -1597.56 iterations 27
Cbc0038I Pass  41: (1.71 seconds) suminf.    9.30784 (185) obj. -1597.56 iterations 290
Cbc0038I Pass  42: (1.73 seconds) suminf.    9.16704 (205) obj. -1597.56 iterations 96
Cbc0038I Pass  43: (1.75 seconds) suminf.   10.51013 (188) obj. -1597.56 iterations 175
Cbc0038I Pass  44: (1.76 seconds) suminf.   10.08539 (187) obj. -1597.56 iterations 60
Cbc0038I Pass  45: (1.78 seconds) suminf.   11.47923 (195) obj. -1597.56 iterations 112
Cbc0038I Pass  46: (1.79 seconds) suminf.   11.23541 (195) obj. -1597.56 iterations 109
Cbc0038I Pass  47: (1.81 seconds) suminf.    6.88712 (198) obj. -1597.56 iterations 94
Cbc0038I Pass  48: (1.82 seconds) suminf.    6.53638 (208) obj. -1597.56 iterations 78
Cbc0038I Pass  49: (1.85 seconds) suminf.   12.62975 (137) obj. -1597.56 iterations 206
Cbc0038I Pass  50: (1.86 seconds) suminf.   10.06751 (174) obj. -1597.56 iterations 94
Cbc0038I Pass  51: (1.88 seconds) suminf.    9.71213 (176) obj. -1597.56 iterations 141
Cbc0038I Pass  52: (1.89 seconds) suminf.    7.98255 (156) obj. -1597.56 iterations 118
Cbc0038I Pass  53: (1.90 seconds) suminf.    7.96204 (158) obj. -1597.56 iterations 49
Cbc0038I Pass  54: (1.91 seconds) suminf.    5.13524 (135) obj. -1597.56 iterations 79
Cbc0038I Pass  55: (1.92 seconds) suminf.    4.26486 (122) obj. -1597.56 iterations 52
Cbc0038I Pass  56: (1.94 seconds) suminf.    6.81749 (163) obj. -1597.56 iterations 148
Cbc0038I Pass  57: (1.95 seconds) suminf.    6.26520 (148) obj. -1597.56 iterations 75
Cbc0038I Pass  58: (1.97 seconds) suminf.    6.41605 (157) obj. -1597.56 iterations 126
Cbc0038I Pass  59: (1.98 seconds) suminf.    6.10054 (157) obj. -1597.56 iterations 69
Cbc0038I Pass  60: (2.01 seconds) suminf.    2.32780 (186) obj. -1597.56 iterations 253
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4176 rows 500 columns, reduced to 1319 rows 238 columns
Cbc0038I Mini branch and bound improved solution from -1579 to -1580 (2.78 seconds)
Cbc0038I Round again with cutoff of -1618.62
Cbc0038I Pass  60: (2.79 seconds) suminf.   46.35614 (117) obj. -1618.62 iterations 76
Cbc0038I Pass  61: (2.82 seconds) suminf.   40.22336 (102) obj. -1618.62 iterations 222
Cbc0038I Pass  62: (2.82 seconds) suminf.   37.60944 (83) obj. -1618.62 iterations 107
Cbc0038I Pass  63: (2.84 seconds) suminf.   29.30271 (113) obj. -1618.62 iterations 115
Cbc0038I Pass  64: (2.84 seconds) suminf.   28.34149 (141) obj. -1618.62 iterations 57
Cbc0038I Pass  65: (2.86 seconds) suminf.   26.69977 (125) obj. -1618.62 iterations 91
Cbc0038I Pass  66: (2.87 seconds) suminf.   26.21909 (140) obj. -1618.62 iterations 86
Cbc0038I Pass  67: (2.89 seconds) suminf.   26.48661 (125) obj. -1618.62 iterations 167
Cbc0038I Pass  68: (2.90 seconds) suminf.   22.38660 (142) obj. -1618.62 iterations 111
Cbc0038I Pass  69: (2.91 seconds) suminf.   21.97379 (165) obj. -1618.62 iterations 58
Cbc0038I Pass  70: (2.92 seconds) suminf.   21.07218 (163) obj. -1618.62 iterations 63
Cbc0038I Pass  71: (2.92 seconds) suminf.   20.83383 (162) obj. -1618.62 iterations 52
Cbc0038I Pass  72: (Resolution status: TIMED OUT and CALCULATED FEASIBLE SOLUTION

Resolution time (sec) : 30.505

----------------------------------

Result; test_500_1000_r0.05-0.dat; 30.505; OptimizationStatus.FEASIBLE; 1600.0

2.93 seconds) suminf.   20.31132 (167) obj. -1618.62 iterations 73
Cbc0038I Pass  73: (2.94 seconds) suminf.   19.83847 (161) obj. -1618.62 iterations 64
Cbc0038I Pass  74: (2.96 seconds) suminf.   23.56678 (117) obj. -1618.62 iterations 146
Cbc0038I Pass  75: (2.97 seconds) suminf.   23.02696 (172) obj. -1618.62 iterations 73
Cbc0038I Pass  76: (2.99 seconds) suminf.   21.72124 (122) obj. -1618.62 iterations 160
Cbc0038I Pass  77: (3.01 seconds) suminf.   19.08660 (150) obj. -1618.62 iterations 150
Cbc0038I Pass  78: (3.02 seconds) suminf.   19.17938 (151) obj. -1618.62 iterations 91
Cbc0038I Pass  79: (3.05 seconds) suminf.   37.67137 (132) obj. -1618.62 iterations 204
Cbc0038I Pass  80: (3.07 seconds) suminf.   17.85681 (147) obj. -1618.62 iterations 226
Cbc0038I Pass  81: (3.08 seconds) suminf.   15.49614 (181) obj. -1618.62 iterations 54
Cbc0038I Pass  82: (3.09 seconds) suminf.   15.01993 (183) obj. -1618.62 iterations 26
Cbc0038I Pass  83: (3.10 seconds) suminf.   16.11102 (153) obj. -1618.62 iterations 132
Cbc0038I Pass  84: (3.11 seconds) suminf.   15.33294 (156) obj. -1618.62 iterations 54
Cbc0038I Pass  85: (3.12 seconds) suminf.   11.86714 (174) obj. -1618.62 iterations 74
Cbc0038I Pass  86: (3.13 seconds) suminf.   11.53503 (165) obj. -1618.62 iterations 24
Cbc0038I Pass  87: (3.13 seconds) suminf.   14.35088 (146) obj. -1618.62 iterations 45
Cbc0038I Pass  88: (3.14 seconds) suminf.   12.12523 (154) obj. -1618.62 iterations 52
Cbc0038I Pass  89: (3.15 seconds) suminf.   12.08690 (160) obj. -1618.62 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 284 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4176 rows 500 columns, reduced to 1087 rows 216 columns
Cbc0038I Mini branch and bound did not improve solution (3.85 seconds)
Cbc0038I After 3.85 seconds - Feasibility pump exiting with objective of -1580 - took 3.16 seconds
Cbc0012I Integer solution of -1580 found by feasibility pump after 0 iterations and 0 nodes (3.85 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 480 rows 148 columns
Cbc0031I 90 added rows had average density of 39
Cbc0013I At root node, 90 cuts changed objective from -1667.7778 to -1637.1622 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 6.0 elements, 0 column cuts (40 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 832 row cuts average 206.8 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 335 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 131.2 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1580 best solution, best possible -1637.1622 (5.94 seconds)
Cbc0010I After 1 nodes, 2 on tree, -1580 best solution, best possible -1637.1622 (6.69 seconds)
Cbc0010I After 3 nodes, 4 on tree, -1580 best solution, best possible -1637.1622 (7.94 seconds)
Cbc0010I After 5 nodes, 6 on tree, -1580 best solution, best possible -1637.1622 (8.89 seconds)
Cbc0010I After 7 nodes, 8 on tree, -1580 best solution, best possible -1637.1622 (9.70 seconds)
Cbc0012I Integer solution of -1582 found by DiveCoefficient after 7466 iterations and 15 nodes (10.33 seconds)
Cbc0010I After 17 nodes, 13 on tree, -1582 best solution, best possible -1637.1622 (10.40 seconds)
Cbc0010I After 30 nodes, 19 on tree, -1582 best solution, best possible -1637.1622 (11.17 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 375 rows 128 columns
Cbc0010I After 41 nodes, 25 on tree, -1582 best solution, best possible -1637.1622 (12.62 seconds)
Cbc0010I After 49 nodes, 29 on tree, -1582 best solution, best possible -1637.1622 (13.32 seconds)
Cbc0010I After 68 nodes, 37 on tree, -1582 best solution, best possible -1637.1622 (14.04 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 8 rows 10 columns
Cbc0012I Integer solution of -1599 found by RINS after 18808 iterations and 91 nodes (14.61 seconds)
Cbc0010I After 99 nodes, 25 on tree, -1599 best solution, best possible -1637.1622 (14.74 seconds)
Cbc0010I After 228 nodes, 19 on tree, -1599 best solution, best possible -1637.1622 (15.45 seconds)
Cbc0004I Integer solution of -1600 found after 27443 iterations and 249 nodes (15.49 seconds)
Cbc0010I After 269 nodes, 13 on tree, -1600 best solution, best possible -1637.1622 (16.23 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 413 rows 135 columns
Cbc0010I After 294 nodes, 16 on tree, -1600 best solution, best possible -1637.1622 (17.37 seconds)
Cbc0010I After 317 nodes, 20 on tree, -1600 best solution, best possible -1637.1622 (18.11 seconds)
Cbc0010I After 375 nodes, 21 on tree, -1600 best solution, best possible -1637.1622 (18.86 seconds)
Cbc0010I After 429 nodes, 15 on tree, -1600 best solution, best possible -1637.1622 (19.56 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 252 rows 106 columns
Cbc0010I After 500 nodes, 24 on tree, -1600 best solution, best possible -1637.1622 (20.30 seconds)
Cbc0010I After 549 nodes, 15 on tree, -1600 best solution, best possible -1637.1622 (21.02 seconds)
Cbc0010I After 573 nodes, 18 on tree, -1600 best solution, best possible -1637.1622 (21.73 seconds)
Cbc0010I After 675 nodes, 5 on tree, -1600 best solution, best possible -1637.1622 (22.70 seconds)
Cbc0010I After 689 nodes, 12 on tree, -1600 best solution, best possible -1637.1622 (23.42 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 594 rows 157 columns
Cbc0010I After 696 nodes, 16 on tree, -1600 best solution, best possible -1637.1622 (24.93 seconds)
Cbc0010I After 733 nodes, 21 on tree, -1600 best solution, best possible -1637.1622 (25.63 seconds)
Cbc0010I After 786 nodes, 16 on tree, -1600 best solution, best possible -1637.1622 (26.34 seconds)
Cbc0010I After 855 nodes, 5 on tree, -1600 best solution, best possible -1637.1622 (27.05 seconds)
Cbc0038I Full problem 4176 rows 500 columns, reduced to 680 rows 167 columns
Cbc0010I After 900 nodes, 6 on tree, -1600 best solution, best possible -1637.1622 (28.91 seconds)
Cbc0010I After 912 nodes, 9 on tree, -1600 best solution, best possible -1637.1622 (29.61 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective -1600 (best possible -1637.1622), took 81607 iterations and 939 nodes (30.03 seconds)
Cbc0032I Strong branching done 3858 times (81808 iterations), fathomed 33 nodes and fixed 41 variables
Cbc0035I Maximum depth 40, 14607 variables fixed on reduced cost
Total time (CPU seconds):       29.90   (Wallclock seconds):       30.15

