Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 6238 (-6237) rows, 500 (0) columns and 12974 (-12474) elements
Clp1000I sum of infeasibilities 2.8914e-06 - average 4.63514e-10, 244 fixed columns
Coin0506I Presolve 1677 (-4561) rows, 256 (-244) columns and 3608 (-9366) elements
Clp0029I End of values pass after 256 iterations
Clp0014I Perturbing problem by 0.001% of 2.0226594 - largest nonzero change 3.0106659e-05 ( 0.0019514664%) - largest zero change 2.6894305e-05
Clp0000I Optimal - objective value 1707.7586
Clp0000I Optimal - objective value 1707.7586
Coin0511I After Postsolve, objective 1707.7586, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 1707.7586
Clp0000I Optimal - objective value 1707.7586
Clp0000I Optimal - objective value 1707.7586
Coin0511I After Postsolve, objective 1707.7586, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 1707.758621 - 0 iterations time 0.332, Presolve 0.01, Idiot 0.32

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2338 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1598 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 529 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 4170 rows, 500 columns (500 integer (500 of which binary)) and 11200 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 1.346%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 132 integers unsatisfied sum - 65.7778
Cbc0038I Pass   1: (0.39 seconds) suminf.    0.00000 (0) obj. -1101 iterations 374
Cbc0038I Solution found of -1101
Cbc0038I Rounding solution of -1519 is better than previous of -1101

Cbc0038I Before mini branch and bound, 368 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4170 rows 500 columns, reduced to 386 rows 132 columns
Cbc0038I Mini branch and bound did not improve solution (0.62 seconds)
Cbc0038I Round again with cutoff of -1534.78
Cbc0038I Pass   2: (0.62 seconds) suminf.    0.79239 (4) obj. -1534.78 iterations 169
Cbc0038I Pass   3: (0.63 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 57
Cbc0038I Pass   4: (0.63 seconds) suminf.    0.14286 (1) obj. -1541.43 iterations 94
Cbc0038I Pass   5: (0.63 seconds) suminf.    0.07071 (1) obj. -1534.78 iterations 11
Cbc0038I Pass   6: (0.63 seconds) suminf.    0.13000 (1) obj. -1541.3 iterations 10
Cbc0038I Pass   7: (0.64 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 241
Cbc0038I Pass   8: (0.65 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 141
Cbc0038I Pass   9: (0.65 seconds) suminf.    0.12676 (1) obj. -1538.73 iterations 7
Cbc0038I Pass  10: (0.65 seconds) suminf.    0.12676 (1) obj. -1538.73 iterations 0
Cbc0038I Pass  11: (0.65 seconds) suminf.    0.38736 (1) obj. -1534.78 iterations 13
Cbc0038I Pass  12: (0.65 seconds) suminf.    0.37374 (1) obj. -1536.26 iterations 9
Cbc0038I Pass  13: (0.66 seconds) suminf.    1.28068 (4) obj. -1534.78 iterations 207
Cbc0038I Pass  14: (0.66 seconds) suminf.    0.63719 (3) obj. -1534.78 iterations 178
Cbc0038I Pass  15: (0.67 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 155
Cbc0038I Pass  16: (0.67 seconds) suminf.    0.25455 (1) obj. -1537.45 iterations 26
Cbc0038I Pass  17: (0.67 seconds) suminf.    0.25455 (1) obj. -1537.45 iterations 0
Cbc0038I Pass  18: (0.67 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 43
Cbc0038I Pass  19: (0.67 seconds) suminf.    0.33871 (1) obj. -1536.61 iterations 28
Cbc0038I Pass  20: (0.67 seconds) suminf.    0.33871 (1) obj. -1536.61 iterations 0
Cbc0038I Pass  21: (0.68 seconds) suminf.    0.79170 (4) obj. -1534.78 iterations 156
Cbc0038I Pass  22: (0.68 seconds) suminf.    0.45161 (1) obj. -1535.48 iterations 99
Cbc0038I Pass  23: (0.68 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 24
Cbc0038I Pass  24: (0.68 seconds) suminf.    0.45161 (1) obj. -1535.48 iterations 23
Cbc0038I Pass  25: (0.69 seconds) suminf.   13.47777 (28) obj. -1534.78 iterations 193
Cbc0038I Pass  26: (0.70 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 140
Cbc0038I Pass  27: (0.70 seconds) suminf.    0.47777 (2) obj. -1534.78 iterations 1
Cbc0038I Pass  28: (0.70 seconds) suminf.    0.23529 (1) obj. -1542.35 iterations 72
Cbc0038I Pass  29: (0.70 seconds) suminf.    0.10363 (1) obj. -1534.78 iterations 12
Cbc0038I Pass  30: (0.70 seconds) suminf.    0.17021 (1) obj. -1541.7 iterations 11
Cbc0038I Pass  31: (0.73 seconds) suminf.    1.23233 (3) obj. -1534.78 iterations 434
Cbc0038I Rounding solution of -1547 is better than previous of -1519

Cbc0038I Before mini branch and bound, 325 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4170 rows 500 columns, reduced to 653 rows 175 columns
Cbc0038I Mini branch and bound did not improve solution (0.94 seconds)
Cbc0038I Round again with cutoff of -1571.96
Cbc0038I Pass  31: (0.96 seconds) suminf.    0.69405 (4) obj. -1571.96 iterations 128
Cbc0038I Pass  32: (1.05 seconds) suminf.    0.19555 (2) obj. -1571.96 iterations 1154
Cbc0038I Pass  33: (1.05 seconds) suminf.    0.27778 (1) obj. -1572.78 iterations 96
Cbc0038I Pass  34: (1.06 seconds) suminf.    2.27231 (116) obj. -1571.96 iterations 243
Cbc0038I Pass  35: (1.08 seconds) suminf.    0.80445 (2) obj. -1571.96 iterations 265
Cbc0038I Pass  36: (1.08 seconds) suminf.    0.35294 (1) obj. -1573.53 iterations 88
Cbc0038I Pass  37: (1.08 seconds) suminf.    0.19555 (2) obj. -1571.96 iterations 38
Cbc0038I Pass  38: (1.09 seconds) suminf.    0.20225 (1) obj. -1572.02 iterations 36
Cbc0038I Pass  39: (1.10 seconds) suminf.    0.74006 (135) obj. -1571.96 iterations 304
Cbc0038I Pass  40: (1.13 seconds) suminf.    0.35591 (2) obj. -1571.96 iterations 267
Cbc0038I Pass  41: (1.13 seconds) suminf.    0.28803 (1) obj. -1571.96 iterations 111
Cbc0038I Pass  42: (1.13 seconds) suminf.    0.29787 (1) obj. -1572.98 iterations 11
Cbc0038I Pass  43: (1.16 seconds) suminf.    3.73771 (162) obj. -1571.96 iterations 459
Cbc0038I Pass  44: (1.18 seconds) suminf.    0.19555 (2) obj. -1571.96 iterations 295
Cbc0038I Pass  45: (1.18 seconds) suminf.    0.19555 (2) obj. -1571.96 iterations 0
Cbc0038I Pass  46: (1.18 seconds) suminf.    0.45455 (1) obj. -1574.55 iterations 125
Cbc0038I Pass  47: (1.19 seconds) suminf.    0.25919 (1) obj. -1571.96 iterations 13
Cbc0038I Pass  48: (1.19 seconds) suminf.    0.26596 (1) obj. -1572.66 iterations 12
Cbc0038I Pass  49: (1.21 seconds) suminf.   15.53221 (150) obj. -1571.96 iterations 334
Cbc0038I Pass  50: (1.23 seconds) suminf.    0.47137 (152) obj. -1571.96 iterations 253
Cbc0038I Pass  51: (1.24 seconds) suminf.    0.47137 (152) obj. -1571.96 iterations 37
Cbc0038I Pass  52: (1.26 seconds) suminf.    0.74259 (2) obj. -1571.96 iterations 254
Cbc0038I Pass  53: (1.26 seconds) suminf.    0.74259 (2) obj. -1571.96 iterations 38
Cbc0038I Pass  54: (1.27 seconds) suminf.    0.24957 (1) obj. -1571.96 iterations 154
Cbc0038I Pass  55: (1.27 seconds) suminf.    0.25532 (1) obj. -1572.55 iterations 11
Cbc0038I Pass  56: (1.28 seconds) suminf.    0.76018 (4) obj. -1571.96 iterations 239
Cbc0038I Pass  57: (1.28 seconds) suminf.    0.19555 (2) obj. -1571.96 iterations 212
Cbc0038I Pass  58: (1.28 seconds) suminf.    0.33333 (1) obj. -1573.33 iterations 51
Cbc0038I Pass  59: (1.29 seconds) suminf.    0.19555 (2) obj. -1571.96 iterations 88
Cbc0038I Pass  60: (1.29 seconds) suminf.    0.21154 (1) obj. -1577.88 iterations 65
Cbc0038I Rounding solution of -1561 is better than previous of -1547

Cbc0038I Before mini branch and bound, 260 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4170 rows 500 columns, reduced to 1293 rows 240 columns - 13 fixed gives 319, 125 - ok now
Cbc0038I Full problem 4170 rows 500 columns, reduced to 319 rows 125 columns
Cbc0038I Mini branch and bound improved solution from -1561 to -1580 (1.42 seconds)
Cbc0038I Round again with cutoff of -1607.03
Cbc0038I Pass  60: (1.44 seconds) suminf.   22.59151 (110) obj. -1607.03 iterations 151
Cbc0038I Pass  61: (1.45 seconds) suminf.   16.82900 (175) obj. -1607.03 iterations 114
Cbc0038I Pass  62: (1.46 seconds) suminf.   16.59526 (178) obj. -1607.03 iterations 34
Cbc0038I Pass  63: (1.47 seconds) suminf.   14.58158 (125) obj. -1607.03 iterations 174
Cbc0038I Pass  64: (1.48 seconds) suminf.   12.23903 (125) obj. -1607.03 iterations 26
Cbc0038I Pass  65: (1.48 seconds) suminf.   12.19060 (129) obj. -1607.03 iterations 17
Cbc0038I Pass  66: (1.49 seconds) suminf.   15.35916 (78) obj. -1607.03 iterations 81
Cbc0038I Pass  67: (1.50 seconds) suminf.   13.11223 (125) obj. -1607.03 iterations 85
Cbc0038I Pass  68: (1.59 seconds) suminf.    0.45205 (3) obj. -1607.03 iterations 890
Cbc0038I Pass  69: (1.60 seconds) suminf.    0.45205 (3) obj. -1607.03 iterations 91
Cbc0038I Pass  70: (1.60 seconds) suminf.    0.70333 (2) obj. -1607.03 iterations 176
Cbc0038I Pass  71: (1.60 seconds) suminf.    0.01000 (1) obj. -1610.1 iterations 34
Cbc0038I Solution found of -1609
Cbc0038I Before mini branch and bound, 305 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4170 rows 500 columns, reduced to 869 rows 195 columns
Cbc0038I Mini branch and bound did not improve solution (2.07 seconds)
Cbc0038I Round again with cutoff of -1627.33
Cbc0038I Pass  72: (2.08 seconds) suminf.   35.20017 (101) obj. -1627.33 iterations 26
Cbc0038I Pass  73: (2.09 seconds) suminf.   31.24161 (153) obj. -1627.33 iterations 79
Cbc0038I Pass  74: (2.09 seconds) suminf.   29.60070 (151) obj. -1627.33 iterations 16
Cbc0038I Pass  75: (2.09 seconds) suminf.   29.05545 (154) obj. -1627.33 iterations 26
Cbc0038I Pass  76: (2.10 seconds) suminf.   33.08723 (95) obj. -1627.33 iterations 75
Cbc0038I Pass  77: (2.11 seconds) suminf.   28.65834 (140) obj. -1627.33 iterations 73
Cbc0038I Pass  78: (2.12 seconds) suminf.   27.53497 (155) obj. -1627.33 iterations 56
Cbc0038I Pass  79: (2.12 seconds) suminf.   27.51331 (134) obj. -1627.33 iterations 66
Cbc0038I Pass  80: (2.13 seconds) suminf.   26.88059 (128) obj. -1627.33 iterations 47
Cbc0038I Pass  81: (2.14 seconds) suminf.   26.87773 (84) obj. -1627.33 iterations 78
Cbc0038I Pass  82: (2.14 seconds) suminf.   25.13728 (121) obj. -1627.33 iterations 76
Cbc0038I Pass  83: (2.15 seconds) suminf.   25.48677 (123) obj. -1627.33 iterations 56
Cbc0038I Pass  84: (2.16 seconds) suminf.   24.20076 (129) obj. -1627.33 iterations 43
Cbc0038I Pass  85: (2.17 seconds) suminf.   17.12553 (148) obj. -1627.33 iterations 120
Cbc0038I Pass  86: (2.17 seconds) suminf.   16.84219 (145) obj. -1627.33 iterations 14
Cbc0038I Pass  87: (2.18 seconds) suminf.   17.93673 (154) obj. -1627.33 iterations 55
Cbc0038I Pass  88: (2.20 seconds) suminf.   47.29563 (129) obj. -1627.33 iterations 217
Cbc0038I Pass  89: (2.22 seconds) suminf.   33.52775 (114) obj. -1627.33 iterations 190
Cbc0038I Pass  90: (2.23 seconds) suminf.   29.45754 (157) obj. -1627.33 iterations 86
Cbc0038I Pass  91: (2.23 seconds) suminf.   28.95314 (135) obj. -1627.33 iterations 26
Cbc0038I Pass  92: (2.25 seconds) suminf.   22.20446 (154) obj. -1627.33 iterations 132
Cbc0038I Pass  93: (2.26 seconds) suminf.   20.58374 (182) obj. -1627.33 iterations 121
Cbc0038I Pass  94: (2.27 seconds) suminf.   24.38393 (166) obj. -1627.33 iterations 76
Cbc0038I Pass  95: (2.29 seconds) suminf.   21.66810 (171) obj. -1627.33 iterations 125
Cbc0038I Pass  96: (2.30 seconds) suminf.   24.04567 (132) obj. -1627.33 iterations 102
Cbc0038I Pass  97: (2.30 seconds) suminf.   22.65327 (133) obj. -1627.33 iterations 37
Cbc0038I Pass  98: (2.31 seconds) suminf.   21.83362 (150) obj. -1627.33 iterations 46
Cbc0038I Pass  99: (2.32 seconds) suminf.   22.04265 (125) obj. -1627.33 iterations 104
Cbc0038I Pass 100: (2.33 seconds) suminf.   21.34199 (167) obj. -1627.33 iterations 77
Cbc0038I Pass 101: (2.33 seconds) suminf.   21.40959 (167) obj. -1627.33 iterations 46
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 289 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4170 rows 500 columns, reduced to 1034 rows 211 columns
Cbc0038I Mini branch and bound did not improve solution (2.90 seconds)
Cbc0038I After 2.90 seconds - Feasibility pump exiting with objective of -1609 - took 2.47 seconds
Cbc0012I Integer solution of -1609 found by feasibility pump after 0 iterations and 0 nodes (2.90 seconds)
Cbc0038I Full problem 4170 rows 500 columns, reduced to 434 rows 141 columns
Cbc0031I 97 added rows had average density of 35.762887
Cbc0013I At root node, 97 cuts changed objective from -1667.7778 to -1636.7383 in 22 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 6.0 elements, 0 column cuts (15 active)  in 0.133 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 1063 row cuts average 204.1 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 Resolution status: TIMED OUT and CALCULATED FEASIBLE SOLUTION

Resolution time (sec) : 30.522

----------------------------------

Result; test_500_1000_r0.05-0.dat; 30.522; OptimizationStatus.FEASIBLE; 1610.0

(Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 351 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 311 row cuts average 146.9 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 245 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.568 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1609 best solution, best possible -1636.7383 (5.94 seconds)
Cbc0010I After 1 nodes, 2 on tree, -1609 best solution, best possible -1636.7383 (7.10 seconds)
Cbc0010I After 2 nodes, 3 on tree, -1609 best solution, best possible -1636.7383 (7.86 seconds)
Cbc0010I After 4 nodes, 5 on tree, -1609 best solution, best possible -1636.7383 (8.93 seconds)
Cbc0010I After 6 nodes, 7 on tree, -1609 best solution, best possible -1636.7383 (9.88 seconds)
Cbc0010I After 9 nodes, 9 on tree, -1609 best solution, best possible -1636.7383 (10.77 seconds)
Cbc0010I After 23 nodes, 15 on tree, -1609 best solution, best possible -1636.7383 (11.48 seconds)
Cbc0038I Full problem 4170 rows 500 columns, reduced to 621 rows 161 columns
Cbc0010I After 43 nodes, 13 on tree, -1609 best solution, best possible -1636.7383 (12.67 seconds)
Cbc0010I After 76 nodes, 10 on tree, -1609 best solution, best possible -1636.7383 (13.38 seconds)
Cbc0004I Integer solution of -1610 found after 15150 iterations and 80 nodes (13.46 seconds)
Cbc0010I After 89 nodes, 7 on tree, -1610 best solution, best possible -1636.7383 (14.11 seconds)
Cbc0038I Full problem 4170 rows 500 columns, reduced to 563 rows 154 columns
Cbc0010I After 92 nodes, 8 on tree, -1610 best solution, best possible -1636.7383 (15.41 seconds)
Cbc0010I After 100 nodes, 5 on tree, -1610 best solution, best possible -1636.7383 (16.24 seconds)
Cbc0010I After 122 nodes, 4 on tree, -1610 best solution, best possible -1636.7383 (16.95 seconds)
Cbc0010I After 125 nodes, 6 on tree, -1610 best solution, best possible -1636.7383 (17.79 seconds)
Cbc0010I After 142 nodes, 5 on tree, -1610 best solution, best possible -1636.7383 (18.67 seconds)
Cbc0010I After 157 nodes, 2 on tree, -1610 best solution, best possible -1636.7383 (19.80 seconds)
Cbc0010I After 160 nodes, 5 on tree, -1610 best solution, best possible -1636.7383 (20.71 seconds)
Cbc0010I After 170 nodes, 2 on tree, -1610 best solution, best possible -1636.7383 (21.41 seconds)
Cbc0010I After 172 nodes, 1 on tree, -1610 best solution, best possible -1634.55 (22.61 seconds)
Cbc0010I After 173 nodes, 2 on tree, -1610 best solution, best possible -1634.55 (23.43 seconds)
Cbc0010I After 175 nodes, 4 on tree, -1610 best solution, best possible -1634.55 (24.42 seconds)
Cbc0010I After 179 nodes, 8 on tree, -1610 best solution, best possible -1634.55 (25.16 seconds)
Cbc0038I Full problem 4170 rows 500 columns, reduced to 564 rows 157 columns
Cbc0010I After 200 nodes, 12 on tree, -1610 best solution, best possible -1634.55 (27.26 seconds)
Cbc0010I After 235 nodes, 7 on tree, -1610 best solution, best possible -1634.55 (27.96 seconds)
Cbc0010I After 251 nodes, 4 on tree, -1610 best solution, best possible -1634.55 (29.08 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective -1610 (best possible -1634.55), took 44927 iterations and 266 nodes (30.08 seconds)
Cbc0032I Strong branching done 1196 times (44429 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 16, 5747 variables fixed on reduced cost
Total time (CPU seconds):       28.99   (Wallclock seconds):       30.17

