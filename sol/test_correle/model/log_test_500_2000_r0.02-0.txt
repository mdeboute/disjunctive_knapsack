Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 2496 (-2495) rows, 500 (0) columns and 5490 (-4990) elements
Clp1000I sum of infeasibilities 5.15102e-07 - average 2.06371e-10, 7 fixed columns
Coin0506I Presolve 2437 (-59) rows, 493 (-7) columns and 5365 (-125) elements
Clp0029I End of values pass after 493 iterations
Clp0014I Perturbing problem by 0.001% of 2.5596906 - largest nonzero change 3.5583835e-05 ( 0.0015721819%) - largest zero change 2.9283556e-05
Clp0000I Optimal - objective value 3061.4961
Clp0000I Optimal - objective value 3061.4961
Coin0511I After Postsolve, objective 3061.4961, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 3061.4961
Clp0000I Optimal - objective value 3061.4961
Clp0000I Optimal - objective value 3061.4961
Coin0511I After Postsolve, objective 3061.4961, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3061.496063 - 0 iterations time 0.222, Presolve 0.00, Idiot 0.22

Starting MIP optimization
Resolution status: OPTIMAL

Resolution time (sec) : 2.358

----------------------------------

Result; test_500_2000_r0.02-0.dat; 2.358; OptimizationStatus.OPTIMAL; 3040.0

Cgl0003I 0 fixed, 0 tightened bounds, 153 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 154 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 132 strengthened rows, 0 substitutions
Cgl0004I processed model has 2216 rows, 500 columns (500 integer (500 of which binary)) and 5089 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.598%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 152 integers unsatisfied sum - 75.6047
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2292 iterations 275
Cbc0038I Solution found of -2292
Cbc0038I Rounding solution of -2901 is better than previous of -2292

Cbc0038I Before mini branch and bound, 348 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2216 rows 500 columns, reduced to 285 rows 152 columns
Cbc0038I Mini branch and bound improved solution from -2901 to -2950 (0.36 seconds)
Cbc0038I Round again with cutoff of -2961.5
Cbc0038I Pass   2: suminf.    1.25106 (5) obj. -2961.5 iterations 202
Cbc0038I Pass   3: suminf.    0.33721 (1) obj. -2963.37 iterations 134
Cbc0038I Pass   4: suminf.    0.27731 (1) obj. -2961.5 iterations 13
Cbc0038I Pass   5: suminf.    0.29000 (1) obj. -2962.9 iterations 11
Cbc0038I Pass   6: suminf.    0.59096 (2) obj. -2961.5 iterations 129
Cbc0038I Pass   7: suminf.    0.23186 (1) obj. -2961.5 iterations 110
Cbc0038I Pass   8: suminf.    0.24000 (1) obj. -2962.4 iterations 9
Cbc0038I Pass   9: suminf.    0.57614 (5) obj. -2961.5 iterations 166
Cbc0038I Pass  10: suminf.    0.36862 (2) obj. -2961.5 iterations 52
Cbc0038I Pass  11: suminf.    0.38789 (1) obj. -2961.5 iterations 76
Cbc0038I Pass  12: suminf.    0.41237 (1) obj. -2964.12 iterations 9
Cbc0038I Pass  13: suminf.    0.97204 (3) obj. -2961.5 iterations 162
Cbc0038I Pass  14: suminf.    0.97204 (3) obj. -2961.5 iterations 50
Cbc0038I Pass  15: suminf.    0.01389 (1) obj. -2969.86 iterations 79
Cbc0038I Pass  16: suminf.    0.32239 (1) obj. -2961.5 iterations 10
Cbc0038I Pass  17: suminf.    0.26804 (1) obj. -2967.32 iterations 8
Cbc0038I Pass  18: suminf.    1.14676 (4) obj. -2961.5 iterations 156
Cbc0038I Pass  19: suminf.    0.20098 (1) obj. -2961.5 iterations 112
Cbc0038I Pass  20: suminf.    0.20619 (1) obj. -2962.06 iterations 9
Cbc0038I Pass  21: suminf.    0.42658 (2) obj. -2961.5 iterations 161
Cbc0038I Pass  22: suminf.    0.42658 (2) obj. -2961.5 iterations 43
Cbc0038I Pass  23: suminf.    0.41593 (1) obj. -2961.5 iterations 82
Cbc0038I Pass  24: suminf.    0.44330 (1) obj. -2964.43 iterations 11
Cbc0038I Pass  25: suminf.    0.25125 (2) obj. -2961.5 iterations 170
Cbc0038I Pass  26: suminf.    0.15046 (2) obj. -2961.5 iterations 132
Cbc0038I Pass  27: suminf.    0.15116 (1) obj. -2961.51 iterations 11
Cbc0038I Pass  28: suminf.    0.26906 (3) obj. -2961.5 iterations 146
Cbc0038I Pass  29: suminf.    0.15046 (2) obj. -2961.5 iterations 104
Cbc0038I Pass  30: suminf.    0.45070 (1) obj. -2964.51 iterations 18
Cbc0038I Pass  31: suminf.    0.31313 (1) obj. -2961.5 iterations 12
Cbc0038I Rounding solution of -2973 is better than previous of -2950

Cbc0038I Before mini branch and bound, 308 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2216 rows 500 columns, reduced to 371 rows 192 columns
Cbc0038I Mini branch and bound improved solution from -2973 to -3030 (0.65 seconds)
Cbc0038I Round again with cutoff of -3036.01
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.   24.93594 (105) obj. -3036.01 iterations 217
Cbc0038I Pass  32: suminf.   12.59329 (179) obj. -3036.01 iterations 97
Cbc0038I Pass  33: suminf.   12.58396 (188) obj. -3036.01 iterations 13
Cbc0038I Pass  34: suminf.    0.60092 (2) obj. -3036.01 iterations 420
Cbc0038I Pass  35: suminf.    0.60092 (2) obj. -3036.01 iterations 1
Cbc0038I Pass  36: suminf.    0.35714 (1) obj. -3036.43 iterations 136
Cbc0038I Pass  37: suminf.    0.35714 (1) obj. -3036.43 iterations 0
Cbc0038I Pass  38: suminf.    0.60092 (2) obj. -3036.01 iterations 173
Cbc0038I Pass  39: suminf.    4.30228 (13) obj. -3036.01 iterations 180
Cbc0038I Pass  40: suminf.    0.60092 (2) obj. -3036.01 iterations 480
Cbc0038I Pass  41: suminf.    1.60095 (193) obj. -3036.01 iterations 219
Cbc0038I Pass  42: suminf.    0.39908 (2) obj. -3036.01 iterations 50
Cbc0038I Pass  43: suminf.    0.38596 (1) obj. -3036.14 iterations 165
Cbc0038I Pass  44: suminf.    0.60092 (2) obj. -3036.01 iterations 152
Cbc0038I Pass  45: suminf.    0.37500 (1) obj. -3036.25 iterations 122
Cbc0038I Pass  46: suminf.    0.37500 (1) obj. -3036.25 iterations 0
Cbc0038I Pass  47: suminf.    2.39797 (13) obj. -3036.01 iterations 291
Cbc0038I Pass  48: suminf.    0.60092 (2) obj. -3036.01 iterations 100
Cbc0038I Pass  49: suminf.    0.26786 (1) obj. -3037.32 iterations 119
Cbc0038I Pass  50: suminf.    0.26786 (1) obj. -3037.32 iterations 0
Cbc0038I Pass  51: suminf.    0.60092 (2) obj. -3036.01 iterations 170
Cbc0038I Pass  52: suminf.    0.35938 (1) obj. -3036.41 iterations 92
Cbc0038I Pass  53: suminf.    0.35938 (1) obj. -3036.41 iterations 0
Cbc0038I Pass  54: suminf.    2.05652 (5) obj. -3036.01 iterations 292
Cbc0038I Pass  55: suminf.    0.25000 (1) obj. -3037.5 iterations 190
Cbc0038I Pass  56: suminf.    0.58921 (2) obj. -3036.01 iterations 162
Cbc0038I Pass  57: suminf.    0.46246 (2) obj. -3036.01 iterations 82
Cbc0038I Pass  58: suminf.    0.16000 (1) obj. -3038.4 iterations 132
Cbc0038I Pass  59: suminf.    0.46246 (2) obj. -3036.01 iterations 100
Cbc0038I Pass  60: suminf.    0.46246 (2) obj. -3036.01 iterations 79
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 283 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2216 rows 500 columns, reduced to 487 rows 217 columns
Cbc0038I Mini branch and bound did not improve solution (1.07 seconds)
Cbc0038I After 1.07 seconds - Feasibility pump exiting with objective of -3030 - took 0.87 seconds
Cbc0012I Integer solution of -3030 found by feasibility pump after 0 iterations and 0 nodes (1.07 seconds)
Cbc0038I Full problem 2216 rows 500 columns, reduced to 286 rows 154 columns
Cbc0031I 66 added rows had average density of 35.090909
Cbc0013I At root node, 66 cuts changed objective from -3056.0465 to -3040 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 14 row cuts average 160.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 190 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 321.1 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3030 best solution, best possible -3040 (1.83 seconds)
Cbc0012I Integer solution of -3040 found by DiveCoefficient after 1606 iterations and 2 nodes (2.10 seconds)
Cbc0001I Search completed - best objective -3040, took 1606 iterations and 2 nodes (2.10 seconds)
Cbc0032I Strong branching done 66 times (3189 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 42 variables fixed on reduced cost
Total time (CPU seconds):       2.11   (Wallclock seconds):       2.13

